name: adbd Build (Very legacy)
permissions:
  contents: write
on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL'
        required: true
        default: 'https://android.googlesource.com/platform/manifest'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'android-4.4.4_r2'
      DEVICE_ARCH:
        description: 'DEVICE_ARCH'
        required: true
        default: 'arm'
      DEBUG:
        description: 'Give me a shell to customize my adbd'
        required: true
        default: false
        type: boolean

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/catthehacker/ubuntu:runner-18.04
      volumes:
        - /:/host_root
    env:
      LC_ALL: "C.UTF-8"
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Arch: ${{ github.event.inputs.DEVICE_ARCH }}"
        echo "Debug: ${{ github.event.inputs.DEBUG }}"
        echo "::endgroup::"
 
    - name: Check Out
      uses: actions/checkout@v3

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Clean up
      run: | 
        sudo cp scripts/cleanup.sh /host_root/root
        sudo chroot /host_root /root/cleanup.sh
      # That's it! Now use your normal steps

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt install -yq bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python bash cpio

    - name: Install Java
      run: |
        wget https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin -O 1
        chmod 755 1 && ./1
        echo "PATH=/github/home/jdk1.6.0_45/bin:$PATH" >> "$GITHUB_ENV"
      working-directory: /github/home

#        wget https://download.java.net/openjdk/jdk7u75/ri/jdk_ri-7u75-b13-linux-x64-18_dec_2014.tar.gz -O 1.tar.gz
#        echo "PATH=/github/home/java-se-7u75-ri/bin:$PATH" >> "$GITHUB_ENV"
#      uses: actions/setup-java@v1.4.4
#      with:
#        java-version: 1.7

    - name: Install Make 3.81
      run: |
        wget https://ftp.gnu.org/gnu/make/make-3.81.tar.gz
        tar -xvzf make-3.81.tar.gz
        cd make-3.81
        ./configure
        sed -i '232 i # define __alloca       alloca' glob/glob.c
        make
        sudo make install
        sudo cp make /usr/bin/make

        echo "::group::Make version"
        make -version
        echo "::endgroup::"

    - name: Install repo
      run: |
        sudo ln -sf /usr/bin/python3 /usr/bin/python
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "azwhikaru"
        git config --global user.email "azwhikaru+37921907@github.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace

#    - name: Set Swap Space
#      uses: pierotofy/set-swap-space@master
#      with:
#        swap-size-gb: 12

    - name: Switch to Python2
      run: |
        sudo rm -f /usr/bin/python /usr/bin/python3.6 /usr/bin/python3.6m /usr/local/bin/python
        sudo ln -sf /usr/bin/python2.7 /usr/bin/python

    - name: Tmate SSH - Customize your adbd
      if: ${{ inputs.DEBUG }}
      uses: mxschmitt/action-tmate@v3.13

    - name: Building adbd
      shell: bash
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch aosp_${{ github.event.inputs.DEVICE_ARCH }}-eng
        make clean
        make adbd -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Debug
      uses: mxschmitt/action-tmate@v3.13
      if: ${{ failure() }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          workspace/out/target/product/generic/root/sbin/adbd
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Arch: ${{ github.event.inputs.DEVICE_ARCH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

